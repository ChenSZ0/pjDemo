package ${package.Controller};


import org.springframework.web.bind.annotation.RequestMapping;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end
import ${package.Service}.${table.serviceName};
import org.springframework.beans.factory.annotation.Autowired;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import com.emgcy.core.system.base.BasePageDataDTO;
import ${package.Entity}.${entity};
import com.baomidou.mybatisplus.plugins.Page;
import com.baomidou.mybatisplus.mapper.Wrapper;
import com.emgcy.core.common.annotation.RepeatUrlData;
import com.baomidou.mybatisplus.mapper.EntityWrapper;
import com.emgcy.core.common.base.BaseMsg;

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Api(tags="${table.comment}类")
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${superControllerClass})
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

	private static final Logger logger = LoggerFactory.getLogger(${table.controllerName}.class);
	
	@Autowired
	private ${table.serviceName} ${table.entityPath}Service;
	
	@GetMapping("/list")
	@ResponseBody
	public BasePageDataDTO<${entity}> list(int page,int limit, ${entity} entity) {
		return null;
	}
	
	@GetMapping("/getInfo")
	@ResponseBody
	public BaseMsg getInfo(long id) {
		return null;
	}
	
	@GetMapping("/del")
	@ResponseBody
	public BaseMsg del(long id) {
		return null;
	}
	
	@PostMapping("/saveOrEdit")
	@RepeatUrlData
	@ResponseBody
	public BaseMsg saveOrEdit(${entity} entity) {
		return null;

	}
	
}
